#name: Docker Test
#
#on:
#  push:
#    branches:
#      - DockerTest
#
#env:
#  RESOURCE_PATH: ./src/main/resources/application.properties
#
#jobs:
#  CI-CD:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v2
#        with:
#          java-version: 17
#
#      # 환경별 yml 파일 생성(1) - application.yml
#      - name: make application.yml
#        run: |
#          touch ./src/main/resources/application.properties
#          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
#          cat ./src/main/resources/application.properties
#
#      # [0.5]
#      - name: Setup Gradle Wrapper
#        run: gradle wrapper --gradle-version 8.5
#        shell: bash
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#        shell: bash
#
#      # [2]
#      - name: Build with Gradle
#        run: ./gradlew clean build
#        shell: bash
#
#      # docker build & push to production
#      - name: Docker build & push to prod
#        if: contains(github.ref, 'DockerTest')
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_USERNAME }}/docker-test-prod .
#          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test-prod
#
#      - name: Set artifact
#        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV
#
#      ## deploy to production
#      - name: Beanstalk Deploy
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
#          username: ubuntu
#          key: ${{ secrets.PRIVATE_KEY }}
#          envs: GITHUB_SHA
#          script: |
#            sudo docker ps
#            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-test-prod
#            sudo docker run -d -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/docker-test-prod
#            sudo docker image prune -f
#
#      ## deploy to develop
#      - name: Deploy to dev
#        uses: appleboy/ssh-action@master
#        id: deploy-dev
#        if: contains(github.ref, 'develop')
#        with:
#          host: ${{ secrets.HOST_DEV }} # EC2 퍼블릭 IPv4 DNS
#          username: ${{ secrets.USERNAME }} # ubuntu
#          password: ${{ secrets.PASSWORD }}
#          port: 22
#          key: ${{ secrets.PRIVATE_KEY }}
#          script: |
#            sudo docker ps
#            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-test-dev
#            sudo docker run -d -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/docker-test-dev
#            sudo docker image prune -f