name: CI-CD

on:
  push:
    branches:
      - main

env:
  RESOURCE_PATH: ./src/main/resources/application.properties
#   S3_BUCKET_NAME: hanghae-trello
#   CODE_DEPLOY_APPLICATION_NAME: trell-code-deploy
#   CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: trell-server

jobs:
  build:
    runs-on: ubuntu-latest
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

       # [0.5]
      - name: Setup Gradle Wrapper
        run: gradle wrapper --gradle-version 8.5
        shell: bash      

      #   # [1]
      # - name: Set yaml file 
      #   uses: microsoft/variable-substitution@v1
      #   with:
      #     files: ${{ env.RESOURCE_PATH }} 
      #   env:
      #     override.value: ${{ secrets.DI_FROM_SECRET }} 
      #     # override.value: 'from deploy.yaml' <-- 이렇게 사용해도 주입이 된다.

      # - name: Grant execute permission for gradlew
      #   run: chmod +x ./gradlew
      #   shell: bash

        # [2]
      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      #2 현재시간가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
           format: YYYY-MM-DDTHH-mm-ss
           utcOffset: "+09:00"
      # 3 배포용 패키지 경로 저장
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV
      # 4 빈스토크 배포
      - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: springboot-developer
        environment_name: springboot-developer-env
        version_label: github-action-${{steps.current-time.outputs.formattedTime}} region: ap-northeast-2
        deployment_package: ./build/libs/${{env.artifact}}
        

      #   # [3]
      # - name: Make zip file
      #   run: zip -r ./$GITHUB_SHA.zip .
      #   shell: bash

      #   # [4]
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
      #     aws-region: ${{ secrets.AWS_REGION }} 

      #   # [5]
      # - name: Upload to S3
      #   run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      #   # [6]
      # - name: Code Deploy
      #   run: | 
      #     aws deploy create-deployment \
      #     --deployment-config-name CodeDeployDefault.AllAtOnce \
      #     --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
      #     --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
      #     --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
